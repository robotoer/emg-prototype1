package emg;

// A single emg value and the time at which it was recorded.
message Reading { // Written by Python, read by Scala.
  optional double timestamp = 1; // Time at which the reading occurred.
  optional int32 value = 2; // Recorded value.
}


// A collection of readings.
message ReadingChunk { // Written by Python, read by Scala.
  repeated Reading readings = 3; // List of readings.
}


// A description of a gesture.
message GestureDesc { // Written by Dart, read by Python/Scala.
  optional string gesture_name = 1; // Name of the gesture.
  optional double force = 2; // Force to be applied for the gesture.
  optional string description = 3; // Description of how the gesture is performed.
}


// A description of an experiment.
message ExperimentDesc { // Written by Dart, read by Python/Scala.
  optional string experiment_name = 1; // Name of the experiment.
  optional int32 gesture_duration = 2; // Duration of each gesture.
  optional int32 time_between_gestures = 3; // Time to wait between gestures.
  repeated GestureDesc gesture = 4; // List of gestures in the experiment.
}


// An instance of an experiment.
message ExperimentInstance { // Written by Python, read by Scala.
  optional string subject_name = 1; // Name of the subject of the experiment.
  optional int32 timestamp = 2; // When the experiment began.
  optional ExperimentDesc experiment = 3; // Description of the experiment.
  repeated ReadingChunk ReadingChunks = 4; // Readings corresponding to Gestures in the experiement.
}


// Control message instructing Python to perform recordings for an experiment.
message StartExperiment { // Written by Dart, read by Python.
  optional string subject_name = 1; // Name of the subject of the experiment.
  optional ExperimentDesc experiment = 2; // Description of the experiment.
  optional int32 timestamp = 3; // When the experiment began.
}


// Control message instructing Python to save or discard a completed experiment.
message FinishExperiment { // Written by Dart, read by Python.
  optional bool save_to_kiji = 1; // Whether to save the experiment to kiji.
  optional int32 timestamp = 2; // When the experiement began.
  optional string subject_name = 3; // Name of the subject of the experiment.
}


// Parent of control messages sent from Dart to Python.
message DartToPythonMessage {
  required string message_type = 1; // Required type of the inner message.
  optional StartExperiment start = 2; // The value of the message if it is a StartExperiment.
  optional FinishExperiment finish = 3; // The value of the message if it is a FinishExperiment.
}
